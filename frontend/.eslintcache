[{"/Users/mattbrown/projects/charShop/frontend/src/App.js":"1","/Users/mattbrown/projects/charShop/frontend/src/components/Header.js":"2","/Users/mattbrown/projects/charShop/frontend/src/index.js":"3","/Users/mattbrown/projects/charShop/frontend/src/components/Footer.js":"4","/Users/mattbrown/projects/charShop/frontend/src/screens/HomeScreen.js":"5","/Users/mattbrown/projects/charShop/frontend/src/components/Product.js":"6","/Users/mattbrown/projects/charShop/frontend/src/reportWebVitals.js":"7","/Users/mattbrown/projects/charShop/frontend/src/components/Rating.js":"8","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductScreen.js":"9","/Users/mattbrown/projects/charShop/frontend/src/store.js":"10","/Users/mattbrown/projects/charShop/frontend/src/reducers/productReducers.js":"11","/Users/mattbrown/projects/charShop/frontend/src/constants/productConstants.js":"12","/Users/mattbrown/projects/charShop/frontend/src/actions/productActions.js":"13","/Users/mattbrown/projects/charShop/frontend/src/components/Loader.js":"14","/Users/mattbrown/projects/charShop/frontend/src/components/Message.js":"15","/Users/mattbrown/projects/charShop/frontend/src/screens/CartScreen.js":"16","/Users/mattbrown/projects/charShop/frontend/src/reducers/cartReducers.js":"17","/Users/mattbrown/projects/charShop/frontend/src/constants/cartConstants.js":"18","/Users/mattbrown/projects/charShop/frontend/src/actions/cartActions.js":"19","/Users/mattbrown/projects/charShop/frontend/src/reducers/userReducers.js":"20","/Users/mattbrown/projects/charShop/frontend/src/constants/userConstants.js":"21","/Users/mattbrown/projects/charShop/frontend/src/screens/LoginScreen.js":"22","/Users/mattbrown/projects/charShop/frontend/src/components/FormContainer.js":"23","/Users/mattbrown/projects/charShop/frontend/src/actions/userActions.js":"24","/Users/mattbrown/projects/charShop/frontend/src/screens/RegisterScreen.js":"25","/Users/mattbrown/projects/charShop/frontend/src/screens/ProfileScreen.js":"26","/Users/mattbrown/projects/charShop/frontend/src/screens/ShippingScreen.js":"27","/Users/mattbrown/projects/charShop/frontend/src/components/CheckoutSteps.js":"28","/Users/mattbrown/projects/charShop/frontend/src/screens/PaymentScreen.js":"29","/Users/mattbrown/projects/charShop/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/mattbrown/projects/charShop/frontend/src/reducers/orderReducers.js":"31","/Users/mattbrown/projects/charShop/frontend/src/constants/orderConstants.js":"32","/Users/mattbrown/projects/charShop/frontend/src/screens/OrderScreen.js":"33","/Users/mattbrown/projects/charShop/frontend/src/screens/UserListScreen.js":"34","/Users/mattbrown/projects/charShop/frontend/src/screens/UserEditScreen.js":"35","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductListScreen.js":"36","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductEditScreen.js":"37","/Users/mattbrown/projects/charShop/frontend/src/screens/OrderListScreen.js":"38","/Users/mattbrown/projects/charShop/frontend/src/actions/orderActions.js":"39"},{"size":2208,"mtime":1610983496124,"results":"40","hashOfConfig":"41"},{"size":2470,"mtime":1610742926725,"results":"42","hashOfConfig":"41"},{"size":597,"mtime":1610472989463,"results":"43","hashOfConfig":"41"},{"size":315,"mtime":1610233223460,"results":"44","hashOfConfig":"41"},{"size":1130,"mtime":1610479107833,"results":"45","hashOfConfig":"41"},{"size":1023,"mtime":1610827922311,"results":"46","hashOfConfig":"41"},{"size":362,"mtime":1610231593625,"results":"47","hashOfConfig":"41"},{"size":1776,"mtime":1610315780340,"results":"48","hashOfConfig":"41"},{"size":3731,"mtime":1610587592175,"results":"49","hashOfConfig":"41"},{"size":2107,"mtime":1610982780704,"results":"50","hashOfConfig":"41"},{"size":2528,"mtime":1610835662359,"results":"51","hashOfConfig":"41"},{"size":1048,"mtime":1610835569144,"results":"52","hashOfConfig":"41"},{"size":3521,"mtime":1610836582716,"results":"53","hashOfConfig":"41"},{"size":386,"mtime":1610478907114,"results":"54","hashOfConfig":"41"},{"size":243,"mtime":1610479022668,"results":"55","hashOfConfig":"41"},{"size":3581,"mtime":1610498048196,"results":"56","hashOfConfig":"41"},{"size":1261,"mtime":1610814746394,"results":"57","hashOfConfig":"41"},{"size":282,"mtime":1610814735763,"results":"58","hashOfConfig":"41"},{"size":1267,"mtime":1610643535526,"results":"59","hashOfConfig":"41"},{"size":3387,"mtime":1610817849145,"results":"60","hashOfConfig":"41"},{"size":1502,"mtime":1610817751439,"results":"61","hashOfConfig":"41"},{"size":2162,"mtime":1610568971814,"results":"62","hashOfConfig":"41"},{"size":336,"mtime":1610568037107,"results":"63","hashOfConfig":"41"},{"size":6098,"mtime":1610818081254,"results":"64","hashOfConfig":"41"},{"size":3136,"mtime":1610570328835,"results":"65","hashOfConfig":"41"},{"size":5399,"mtime":1610983564009,"results":"66","hashOfConfig":"41"},{"size":2800,"mtime":1610586585003,"results":"67","hashOfConfig":"41"},{"size":1249,"mtime":1610586575581,"results":"68","hashOfConfig":"41"},{"size":1642,"mtime":1610643633365,"results":"69","hashOfConfig":"41"},{"size":4966,"mtime":1610983567544,"results":"70","hashOfConfig":"41"},{"size":2475,"mtime":1610982743973,"results":"71","hashOfConfig":"41"},{"size":964,"mtime":1610982701421,"results":"72","hashOfConfig":"41"},{"size":7126,"mtime":1610983571588,"results":"73","hashOfConfig":"41"},{"size":2792,"mtime":1610815838809,"results":"74","hashOfConfig":"41"},{"size":3198,"mtime":1610818507152,"results":"75","hashOfConfig":"41"},{"size":3764,"mtime":1610830060856,"results":"76","hashOfConfig":"41"},{"size":6749,"mtime":1610899235556,"results":"77","hashOfConfig":"41"},{"size":2545,"mtime":1610983887964,"results":"78","hashOfConfig":"41"},{"size":3959,"mtime":1610983542135,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"913lds",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/charShop/frontend/src/App.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Header.js",[],["168","169"],"/Users/mattbrown/projects/charShop/frontend/src/index.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Footer.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/HomeScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Product.js",["170"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-1 p-3 rounded\" style={{ height: \"100%\" }}>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img\n          src={product.image}\n          variant=\"top\"\n          style={{ maxHeight: \"250px\" }}\n        />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text>\n          {/* <div className=\"my-3\">\n            {product.rating} from {product.numReviews} reviews\n          </div> */}\n          {/* <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          /> */}\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","/Users/mattbrown/projects/charShop/frontend/src/reportWebVitals.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Rating.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/ProductScreen.js",["171"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { listProductDetails } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [quantity, setQuantity] = useState(1);\n  const productDetails = useSelector((state) => state.productDetails);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${quantity}`);\n  };\n\n  const { loading, error, product } = productDetails;\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            {/* fluid keeps image inside container */}\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>\n                    <strong>${product.price}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status:</Col>\n                  <Col>\n                    <strong>\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                    </strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              {product.countInStock > 0 && (\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Qty</Col>\n                    <Col>\n                      <Form.Control\n                        as=\"select\"\n                        value={quantity}\n                        onChange={(e) => setQuantity(e.target.value)}\n                      >\n                        {[...Array(product.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button\n                  onClick={addToCartHandler}\n                  className=\"btn-block\"\n                  type=\"button\"\n                  disabled={product.countInStock === 0}\n                >\n                  Add To Cart\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/store.js",[],"/Users/mattbrown/projects/charShop/frontend/src/reducers/productReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/productConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/productActions.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Loader.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Message.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/CartScreen.js",["172","173"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n    console.log(\"remove\");\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    {\" \"}\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) => {\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        );\n                        history.push(\"/cart\");\n                      }}\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"> </i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <h2>\n              Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n              Items\n            </h2>\n            $\n            {cartItems\n              .reduce((acc, item) => acc + item.qty * item.price, 0)\n              .toFixed(2)}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n            >\n              Proceed to Checkout\n            </Button>\n          </ListGroup.Item>\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/reducers/cartReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/cartConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/cartActions.js",[],"/Users/mattbrown/projects/charShop/frontend/src/reducers/userReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/userConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/LoginScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/FormContainer.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/userActions.js",["174"],"import axios from \"axios\";\nimport { CART_RESET } from \"../constants/cartConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: CART_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    console.log(\"zzzzz\", data);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    console.log(\"route id\", id);\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/Users/mattbrown/projects/charShop/frontend/src/screens/RegisterScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/ProfileScreen.js",["175"],"/Users/mattbrown/projects/charShop/frontend/src/screens/ShippingScreen.js",["176","177","178","179"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  console.log({ cart });\n  const { shippingAddress } = cart;\n  const [address, setAddress] = useState(\n    shippingAddress ? shippingAddress.address : \"\"\n  );\n  const [city, setCity] = useState(shippingAddress ? shippingAddress.city : \"\");\n  const [postalCode, setPostalCode] = useState(\n    shippingAddress ? shippingAddress.postalCode : \"\"\n  );\n  const [country, setCountry] = useState(\n    shippingAddress ? shippingAddress.country : \"\"\n  );\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/components/CheckoutSteps.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/PaymentScreen.js",["180","181"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/PlaceOrderScreen.js",["182","183","184"],"/Users/mattbrown/projects/charShop/frontend/src/reducers/orderReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/orderConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/OrderScreen.js",["185","186"],"/Users/mattbrown/projects/charShop/frontend/src/screens/UserListScreen.js",["187"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <td>ID</td>\n              <td>NAME</td>\n              <td>EMAIL</td>\n              <td>ADMIN</td>\n              <td>ID</td>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <div>{user._id}</div>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/UserEditScreen.js",["188","189"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductListScreen.js",["190"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = (product) => {\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <td>ID</td>\n              <td>NAME</td>\n              <td>PRICE</td>\n              <td>CATEGORY</td>\n              <td>BRAND</td>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>${product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <div>{product._id}</div>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductEditScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/OrderListScreen.js",["191"],"/Users/mattbrown/projects/charShop/frontend/src/actions/orderActions.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":14},{"ruleId":"196","severity":1,"message":"200","line":9,"column":3,"nodeType":"198","messageId":"199","endLine":9,"endColumn":7},{"ruleId":"196","severity":1,"message":"201","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"200","line":11,"column":3,"nodeType":"198","messageId":"199","endLine":11,"endColumn":7},{"ruleId":"196","severity":1,"message":"202","line":236,"column":13,"nodeType":"198","messageId":"199","endLine":236,"endColumn":17},{"ruleId":"196","severity":1,"message":"203","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"204","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"203","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"205","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":15},{"ruleId":"196","severity":1,"message":"206","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":14},{"ruleId":"196","severity":1,"message":"204","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"203","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"201","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"206","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":41,"column":6,"nodeType":"209","endLine":41,"endColumn":24,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"211","line":5,"column":10,"nodeType":"198","messageId":"199","endLine":5,"endColumn":16},{"ruleId":"196","severity":1,"message":"212","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":21},{"ruleId":"196","severity":1,"message":"201","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"213","line":15,"column":10,"nodeType":"198","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"214","line":15,"column":20,"nodeType":"198","messageId":"199","endLine":15,"endColumn":31},{"ruleId":"196","severity":1,"message":"201","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"201","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Rating' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'Button' is defined but never used.","'CheckoutSteps' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [success, history, order._id]",{"range":"220","text":"221"},[1336,1354],"[success, history, order._id]"]