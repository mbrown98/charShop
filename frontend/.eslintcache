[{"/Users/mattbrown/projects/charShop/frontend/src/App.js":"1","/Users/mattbrown/projects/charShop/frontend/src/components/Header.js":"2","/Users/mattbrown/projects/charShop/frontend/src/index.js":"3","/Users/mattbrown/projects/charShop/frontend/src/components/Footer.js":"4","/Users/mattbrown/projects/charShop/frontend/src/screens/HomeScreen.js":"5","/Users/mattbrown/projects/charShop/frontend/src/components/Product.js":"6","/Users/mattbrown/projects/charShop/frontend/src/reportWebVitals.js":"7","/Users/mattbrown/projects/charShop/frontend/src/components/Rating.js":"8","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductScreen.js":"9","/Users/mattbrown/projects/charShop/frontend/src/store.js":"10","/Users/mattbrown/projects/charShop/frontend/src/reducers/productReducers.js":"11","/Users/mattbrown/projects/charShop/frontend/src/constants/productConstants.js":"12","/Users/mattbrown/projects/charShop/frontend/src/actions/productActions.js":"13","/Users/mattbrown/projects/charShop/frontend/src/components/Loader.js":"14","/Users/mattbrown/projects/charShop/frontend/src/components/Message.js":"15","/Users/mattbrown/projects/charShop/frontend/src/screens/CartScreen.js":"16","/Users/mattbrown/projects/charShop/frontend/src/reducers/cartReducers.js":"17","/Users/mattbrown/projects/charShop/frontend/src/constants/cartConstants.js":"18","/Users/mattbrown/projects/charShop/frontend/src/actions/cartActions.js":"19","/Users/mattbrown/projects/charShop/frontend/src/reducers/userReducers.js":"20","/Users/mattbrown/projects/charShop/frontend/src/constants/userConstants.js":"21","/Users/mattbrown/projects/charShop/frontend/src/screens/LoginScreen.js":"22","/Users/mattbrown/projects/charShop/frontend/src/components/FormContainer.js":"23","/Users/mattbrown/projects/charShop/frontend/src/actions/userActions.js":"24","/Users/mattbrown/projects/charShop/frontend/src/screens/RegisterScreen.js":"25","/Users/mattbrown/projects/charShop/frontend/src/screens/ProfileScreen.js":"26","/Users/mattbrown/projects/charShop/frontend/src/screens/ShippingScreen.js":"27","/Users/mattbrown/projects/charShop/frontend/src/components/CheckoutSteps.js":"28","/Users/mattbrown/projects/charShop/frontend/src/screens/PaymentScreen.js":"29","/Users/mattbrown/projects/charShop/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/mattbrown/projects/charShop/frontend/src/reducers/orderReducers.js":"31","/Users/mattbrown/projects/charShop/frontend/src/constants/orderConstants.js":"32","/Users/mattbrown/projects/charShop/frontend/src/screens/OrderScreen.js":"33","/Users/mattbrown/projects/charShop/frontend/src/screens/UserListScreen.js":"34","/Users/mattbrown/projects/charShop/frontend/src/screens/UserEditScreen.js":"35","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductListScreen.js":"36","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductEditScreen.js":"37","/Users/mattbrown/projects/charShop/frontend/src/screens/OrderListScreen.js":"38","/Users/mattbrown/projects/charShop/frontend/src/actions/orderActions.js":"39","/Users/mattbrown/projects/charShop/frontend/src/components/SearchBox.js":"40","/Users/mattbrown/projects/charShop/frontend/src/components/Paginate.js":"41","/Users/mattbrown/projects/charShop/frontend/src/components/ProductCarousel.js":"42","/Users/mattbrown/projects/charShop/frontend/src/components/Meta.js":"43"},{"size":2683,"mtime":1610993501609,"results":"44","hashOfConfig":"45"},{"size":2629,"mtime":1610987386418,"results":"46","hashOfConfig":"45"},{"size":597,"mtime":1610472989463,"results":"47","hashOfConfig":"45"},{"size":315,"mtime":1610233223460,"results":"48","hashOfConfig":"45"},{"size":1721,"mtime":1610996154077,"results":"49","hashOfConfig":"45"},{"size":1023,"mtime":1610827922311,"results":"50","hashOfConfig":"45"},{"size":362,"mtime":1610231593625,"results":"51","hashOfConfig":"45"},{"size":1776,"mtime":1610315780340,"results":"52","hashOfConfig":"45"},{"size":4017,"mtime":1610996109013,"results":"53","hashOfConfig":"45"},{"size":2213,"mtime":1610994002769,"results":"54","hashOfConfig":"45"},{"size":3091,"mtime":1610993978786,"results":"55","hashOfConfig":"45"},{"size":1217,"mtime":1610993872807,"results":"56","hashOfConfig":"45"},{"size":4126,"mtime":1610995386820,"results":"57","hashOfConfig":"45"},{"size":386,"mtime":1610478907114,"results":"58","hashOfConfig":"45"},{"size":243,"mtime":1610479022668,"results":"59","hashOfConfig":"45"},{"size":3819,"mtime":1610996197348,"results":"60","hashOfConfig":"45"},{"size":1261,"mtime":1610814746394,"results":"61","hashOfConfig":"45"},{"size":282,"mtime":1610814735763,"results":"62","hashOfConfig":"45"},{"size":1267,"mtime":1610643535526,"results":"63","hashOfConfig":"45"},{"size":3387,"mtime":1610817849145,"results":"64","hashOfConfig":"45"},{"size":1502,"mtime":1610817751439,"results":"65","hashOfConfig":"45"},{"size":2162,"mtime":1610568971814,"results":"66","hashOfConfig":"45"},{"size":336,"mtime":1610568037107,"results":"67","hashOfConfig":"45"},{"size":6098,"mtime":1610818081254,"results":"68","hashOfConfig":"45"},{"size":3136,"mtime":1610570328835,"results":"69","hashOfConfig":"45"},{"size":5399,"mtime":1610983564009,"results":"70","hashOfConfig":"45"},{"size":2800,"mtime":1610586585003,"results":"71","hashOfConfig":"45"},{"size":1249,"mtime":1610586575581,"results":"72","hashOfConfig":"45"},{"size":1642,"mtime":1610643633365,"results":"73","hashOfConfig":"45"},{"size":4966,"mtime":1610983567544,"results":"74","hashOfConfig":"45"},{"size":2931,"mtime":1610985171388,"results":"75","hashOfConfig":"45"},{"size":1203,"mtime":1610984768493,"results":"76","hashOfConfig":"45"},{"size":8102,"mtime":1610985854259,"results":"77","hashOfConfig":"45"},{"size":2792,"mtime":1610815838809,"results":"78","hashOfConfig":"45"},{"size":3198,"mtime":1610818507152,"results":"79","hashOfConfig":"45"},{"size":4066,"mtime":1610993550388,"results":"80","hashOfConfig":"45"},{"size":6749,"mtime":1610899235556,"results":"81","hashOfConfig":"45"},{"size":2545,"mtime":1610983887964,"results":"82","hashOfConfig":"45"},{"size":4723,"mtime":1610985385654,"results":"83","hashOfConfig":"45"},{"size":761,"mtime":1610987199580,"results":"84","hashOfConfig":"45"},{"size":756,"mtime":1610993511620,"results":"85","hashOfConfig":"45"},{"size":1224,"mtime":1610995546604,"results":"86","hashOfConfig":"45"},{"size":337,"mtime":1610995962517,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"913lds",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/charShop/frontend/src/App.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Header.js",[],"/Users/mattbrown/projects/charShop/frontend/src/index.js",[],["185","186"],"/Users/mattbrown/projects/charShop/frontend/src/components/Footer.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/HomeScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Product.js",["187"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-1 p-3 rounded\" style={{ height: \"100%\" }}>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img\n          src={product.image}\n          variant=\"top\"\n          style={{ maxHeight: \"250px\" }}\n        />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text>\n          {/* <div className=\"my-3\">\n            {product.rating} from {product.numReviews} reviews\n          </div> */}\n          {/* <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          /> */}\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","/Users/mattbrown/projects/charShop/frontend/src/reportWebVitals.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Rating.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/ProductScreen.js",["188"],"/Users/mattbrown/projects/charShop/frontend/src/store.js",[],"/Users/mattbrown/projects/charShop/frontend/src/reducers/productReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/productConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/productActions.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Loader.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Message.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/CartScreen.js",["189","190"],"/Users/mattbrown/projects/charShop/frontend/src/reducers/cartReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/cartConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/cartActions.js",[],"/Users/mattbrown/projects/charShop/frontend/src/reducers/userReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/userConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/LoginScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/FormContainer.js",[],"/Users/mattbrown/projects/charShop/frontend/src/actions/userActions.js",["191"],"import axios from \"axios\";\nimport { CART_RESET } from \"../constants/cartConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: CART_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    console.log(\"zzzzz\", data);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    console.log(\"route id\", id);\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/Users/mattbrown/projects/charShop/frontend/src/screens/RegisterScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/ProfileScreen.js",["192"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, user, dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm New Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/ShippingScreen.js",["193","194","195","196"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  console.log({ cart });\n  const { shippingAddress } = cart;\n  const [address, setAddress] = useState(\n    shippingAddress ? shippingAddress.address : \"\"\n  );\n  const [city, setCity] = useState(shippingAddress ? shippingAddress.city : \"\");\n  const [postalCode, setPostalCode] = useState(\n    shippingAddress ? shippingAddress.postalCode : \"\"\n  );\n  const [country, setCountry] = useState(\n    shippingAddress ? shippingAddress.country : \"\"\n  );\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/components/CheckoutSteps.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/PaymentScreen.js",["197","198"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/PlaceOrderScreen.js",["199","200","201"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n// import { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  // Calculate Prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  // ask Charlotte\n  cart.shippingPrice = addDecimals(cart.cartItems.length * 4.5);\n\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n  );\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [success, history]);\n  const placeOrderHandler = (e) => {\n    console.log(\"order\");\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong> {cart.shippingAddress.address},{\" \"}\n                {cart.shippingAddress.city}, {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              {/* may add paymentMethod to localStorage */}\n              <strong>Method: </strong> {cart.paymentMethod}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Col>Items</Col>\n                <Col>${cart.itemsPrice}</Col>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Col>Shipping</Col>\n                <Col>${cart.shippingPrice}</Col>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Col>Tax</Col>\n                <Col>${cart.taxPrice}</Col>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Col>Total</Col>\n                <Col>${cart.totalPrice}</Col>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/reducers/orderReducers.js",[],"/Users/mattbrown/projects/charShop/frontend/src/constants/orderConstants.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/OrderScreen.js",["202","203"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport axios from \"axios\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n// import { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ history, match }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  if (!loading && order) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    // Calculate Prices\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || order._id !== orderId || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <h1>Order {order._id}</h1>{\" \"}\n          <Row>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    {\" \"}\n                    <strong>Name: </strong>\n                    {order.user.name}\n                  </p>\n                  <p>\n                    {\" \"}\n                    <strong>Email: </strong>{\" \"}\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n\n                  <p>\n                    <strong>Address:</strong> {order.shippingAddress.address},{\" \"}\n                    {order.shippingAddress.city},{\" \"}\n                    {order.shippingAddress.postalCode},{\" \"}\n                    {order.shippingAddress.country}\n                  </p>\n                  {/* currently stored as delivered not shipped */}\n                  {order.isDelivered ? (\n                    <Message variant=\"success\">\n                      Shipped on {order.deliveredAt}\n                    </Message>\n                  ) : (\n                    <Message variant=\"danger\">Not shipped</Message>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <p>\n                    {\" \"}\n                    <h2>Payment Method</h2>\n                    {/* may add paymentMethod to localStorage */}\n                    <strong>Method: </strong> {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                  ) : (\n                    <Message variant=\"danger\">Not paid</Message>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message>Order is empty</Message>\n                  ) : (\n                    <ListGroup variant=\"flush\">\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.qty} x ${item.price} = $\n                              {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup>\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Col>Items</Col>\n                    <Col>${order.itemsPrice}</Col>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Col>Shipping</Col>\n                    <Col>${order.shippingPrice}</Col>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Col>Tax</Col>\n                    <Col>${order.taxPrice}</Col>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Col>Total</Col>\n                    <Col>${order.totalPrice}</Col>\n                  </ListGroup.Item>\n                  {!order.isPaid && (\n                    <ListGroup.Item>\n                      {loadingPay && <Loader />}\n                      {!sdkReady ? (\n                        <Loader />\n                      ) : (\n                        <PayPalButton\n                          amount={order.totalPrice}\n                          onSuccess={successPaymentHandler}\n                        />\n                      )}\n                    </ListGroup.Item>\n                  )}\n                  {loadingDeliver && <Loader />}\n                  {userInfo &&\n                    userInfo.isAdmin &&\n                    order.isPaid &&\n                    !order.isDelivered && (\n                      <ListGroup.Item>\n                        <Button\n                          type=\"button\"\n                          className=\"btn btn-block\"\n                          onClick={deliverHandler}\n                        >\n                          Mark as Delivered\n                        </Button>\n                      </ListGroup.Item>\n                    )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/UserListScreen.js",["204"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <td>ID</td>\n              <td>NAME</td>\n              <td>EMAIL</td>\n              <td>ADMIN</td>\n              <td>ID</td>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <div>{user._id}</div>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/UserEditScreen.js",["205","206"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/screens/ProductListScreen.js",["207"],"/Users/mattbrown/projects/charShop/frontend/src/screens/ProductEditScreen.js",[],"/Users/mattbrown/projects/charShop/frontend/src/screens/OrderListScreen.js",["208"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listOrders } from \"../actions/orderActions\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  let { loading, error, orders } = orderList;\n  if (orders) {\n    orders = orders.reverse();\n  }\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <td>ID</td>\n              <td>USER</td>\n              <td>DATE</td>\n              <td>TOTAL PRICE</td>\n              <td>PAID</td>\n              <td>DELIVERED</td>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","/Users/mattbrown/projects/charShop/frontend/src/actions/orderActions.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/SearchBox.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Paginate.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/ProductCarousel.js",[],"/Users/mattbrown/projects/charShop/frontend/src/components/Meta.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":14},{"ruleId":"213","severity":1,"message":"217","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":7},{"ruleId":"213","severity":1,"message":"218","line":1,"column":28,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"217","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":7},{"ruleId":"213","severity":1,"message":"219","line":236,"column":13,"nodeType":"215","messageId":"216","endLine":236,"endColumn":17},{"ruleId":"213","severity":1,"message":"220","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"220","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"222","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":15},{"ruleId":"213","severity":1,"message":"223","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":14},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"220","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"218","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"223","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":41,"column":6,"nodeType":"226","endLine":41,"endColumn":24,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"228","line":11,"column":8,"nodeType":"215","messageId":"216","endLine":11,"endColumn":21},{"ruleId":"224","severity":1,"message":"229","line":79,"column":6,"nodeType":"226","endLine":79,"endColumn":60,"suggestions":"230"},{"ruleId":"213","severity":1,"message":"218","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"231","line":15,"column":10,"nodeType":"215","messageId":"216","endLine":15,"endColumn":18},{"ruleId":"213","severity":1,"message":"232","line":15,"column":20,"nodeType":"215","messageId":"216","endLine":15,"endColumn":31},{"ruleId":"213","severity":1,"message":"218","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"218","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'Rating' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["235"],"'CheckoutSteps' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["236"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [success, history, order._id]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, successDeliver, userInfo, history]",{"range":"243","text":"244"},[1336,1354],"[success, history, order._id]",[2479,2533],"[dispatch, orderId, successPay, order, successDeliver, userInfo, history]"]